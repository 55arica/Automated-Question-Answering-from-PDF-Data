class PDFProcessor:
    try:

        def __init__(self, pdf_path):
            self.pdf_path = pdf_path
            self.embeddings = OpenAIEmbeddings()
            self.docsearch = None
            self.chain = None
            self.load_models()

        def load_models(self):
            reader = PdfReader(self.pdf_path)

            raw_text = ''
            for i, page in enumerate(reader.pages):
                text = page.extract_text()
                if text:
                    raw_text += text

            text_splitter = CharacterTextSplitter(
                separator="\n",
                chunk_size=1000,
                chunk_overlap=200,
                length_function=len,
            )
            texts = text_splitter.split_text(raw_text)

            self.docsearch = FAISS.from_texts(texts, self.embeddings)
            self.chain = load_qa_chain(OpenAI(), chain_type="stuff")

        def process_and_query(self, query):
            docs = self.docsearch.similarity_search(query)
            output = self.chain.run(input_documents=docs, question=query)
            return output
    
    except:
        print("Try again")
